"use strict";(self.webpackChunkmy_website=self.webpackChunkmy_website||[]).push([[9963],{2378:(n,e,o)=>{o.r(e),o.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var t=o(4848),i=o(8453);const s={sidebar_position:2,sidebar_label:"MixitupApp API DEVELOPMENT"},a=void 0,r={id:"MixitupApp/MixitupAppAPIDEV",title:"MixitupAppAPIDEV",description:"MixitupAPI Chat",source:"@site/docs/MixitupApp/MixitupAppAPIDEV.md",sourceDirName:"MixitupApp",slug:"/MixitupApp/MixitupAppAPIDEV",permalink:"/TikLiveApp/docs/MixitupApp/MixitupAppAPIDEV",draft:!1,unlisted:!1,editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/MixitupApp/MixitupAppAPIDEV.md",tags:[],version:"current",sidebarPosition:2,frontMatter:{sidebar_position:2,sidebar_label:"MixitupApp API DEVELOPMENT"},sidebar:"tutorialSidebar",previous:{title:"Introduccion",permalink:"/TikLiveApp/docs/MixitupApp/Introduccion"},next:{title:"MinecraftLive",permalink:"/TikLiveApp/docs/category/minecraftlive"}},c={},d=[{value:"MixitupAPI Chat",id:"mixitupapi-chat",level:2},{value:"MixitupAPI Commands",id:"mixitupapi-commands",level:2}];function p(n){const e={a:"a",code:"code",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...n.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(e.h2,{id:"mixitupapi-chat",children:"MixitupAPI Chat"}),"\n",(0,t.jsxs)(e.p,{children:['Se conecta a la api de MixitupApp donde recibe los mensajes en "',(0,t.jsx)(e.a,{href:"http://localhost:8911/api/v2/chat/message",children:"http://localhost:8911/api/v2/chat/message"}),'" y se envian al chat de twitch\nel siguiente codigo es de public/app.js Donde se envian los comandos a Twitch']}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'function enviarMensaje(message) {\n\n    // Enviar el mensaje\n    fetch("http://localhost:8911/api/v2/chat/message", {\n            method: "POST",\n            headers: {\n                "Content-Type": "application/json"\n            },\n            body: JSON.stringify({ "Message": message, "Platform": "Twitch", "SendAsStreamer": true })\n        })\n        .then(function(response) {\n            if (response.ok) {}\n        })\n        .catch(function(error) {\n            console.error(\'Error al enviar el mensaje:\', error);\n        });\n\n    lastComment = message;\n    lastCommentTime = Date.now();\n}\n'})}),"\n",(0,t.jsx)(e.h2,{id:"mixitupapi-commands",children:"MixitupAPI Commands"}),"\n",(0,t.jsxs)(e.p,{children:["Pide a la API de comandos los comandos existentes ",(0,t.jsx)(e.code,{children:"http://localhost:8911/api/v2/commands?skip=${skip}&pageSize=${pageSize}"})," se muestran los nombres IDs de los comandos"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"const listaComandos = [];\nconst pageSize = 100;\nlet skip = 0;\n\n\nfunction obtenerPaginaDeComandos() {\n    fetch(`http://localhost:8911/api/v2/commands?skip=${skip}&pageSize=${pageSize}`)\n        .then(response => response.json())\n        .then(data => {\n            if (!Array.isArray(data.Commands)) {\n                throw new Error('La respuesta no contiene un array de comandos');\n            }\n\n            const comandos = data.Commands;\n            listaComandos.push(...comandos);\n\n            if (comandos.length === pageSize) {\n                skip += pageSize;\n                obtenerPaginaDeComandos();\n            } else {\n                listaComandos.forEach(cmd => {\n                    if (!cmd || cmd < 1) {\n                        console.error('Comando ignorado:', cmd);\n                        return;\n                    }\n                });\n\n                const MAX_COMMANDS = 50;\n                let filterCondition;\n                if (string) {\n                    filterCondition = cmd => {\n                        if (eventType === 'gift') {\n                            console.log('Filtrando comandos para giftname. Valor de string:', string); \n                            return cmd.Name.toLowerCase().includes(string.toLowerCase());\n                        } else {\n                            return cmd.Name.toLowerCase().split(' ').includes(string.toLowerCase());\n                        }\n                    };\n                } else {\n                    filterCondition = () => true;\n                }\n\n                const comandosEncontrados = listaComandos.filter(filterCondition);\n                if (comandosEncontrados.length === 0) {\n                    console.error(`No hay comando con: ${string}`);\n                    return;\n                }\n\n                const comandosLimitados = comandosEncontrados.slice(0, MAX_COMMANDS);\n                }\n            })\n            .catch(error => {\n                console.error('Error al obtener la p\xe1gina de comandos:', error);\n            });\n    }\n\n"})}),"\n",(0,t.jsxs)(e.p,{children:["Y luego si Recibe algun evento como gift Rose entonces busca el comando con ese nombre y ejecuta el comando enviando el id en ",(0,t.jsx)(e.code,{children:"http://localhost:8911/api/commands/${comando.ID}"})]}),"\n",(0,t.jsxs)(e.ul,{children:["\n",(0,t.jsx)(e.li,{children:"el siguiente codigo es de public/app.js Donde se envian los comandos a Twitch"}),"\n"]}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'fetch(`http://localhost:8911/api/commands/${comando.ID}`, {\n        method: "POST",\n        headers: {\n            "Content-Type": "application/json"\n        },\n        body: JSON.stringify({\n            id: comando.ID,\n            name: comando.Name,\n        })\n    })\n    .then(response => {\n        if (!response.ok) {\n            throw new Error(`HTTP error! status: ${response.status}`);\n        }\n        ultimoComandoEnviado = comando.Name;\n        index++;\n        enviarcomandoConRetraso();\n    })\n'})})]})}function l(n={}){const{wrapper:e}={...(0,i.R)(),...n.components};return e?(0,t.jsx)(e,{...n,children:(0,t.jsx)(p,{...n})}):p(n)}},8453:(n,e,o)=>{o.d(e,{R:()=>a,x:()=>r});var t=o(6540);const i={},s=t.createContext(i);function a(n){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function r(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(i):n.components||i:a(n.components),t.createElement(s.Provider,{value:e},n.children)}}}]);